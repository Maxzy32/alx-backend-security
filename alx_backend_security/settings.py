# """
# Django settings for alx_backend_security project.

# Generated by 'django-admin startproject' using Django 5.2.4.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """

# import os
# from pathlib import Path

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-8js=ty2kbek&4()m3hr=a9q=2u#jc(wjdu*54b^@tjj9@x59w='

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False 

# ALLOWED_HOSTS = ["*", "alx_backend_security.onrender.com", "localhost", "127.0.0.1"]
#   # or ["your-app.onrender.com"]


# # Application definition

# INSTALLED_APPS = [
#     "django.contrib.admin",
#     "django.contrib.auth",
#     "django.contrib.contenttypes",
#     "django.contrib.sessions",
#     "django.contrib.messages",
#     "django.contrib.staticfiles",
#     "ip_tracking",
#     "django_ratelimit",   # ‚Üê important: use correct app label
#     'landing',
#     "rest_framework",
#     "drf_yasg",
# ]

# MIDDLEWARE = [
#     "django.middleware.security.SecurityMiddleware",
#     "django.contrib.sessions.middleware.SessionMiddleware",
#     "django.middleware.common.CommonMiddleware",
#     "django.middleware.csrf.CsrfViewMiddleware",
#     "django.contrib.auth.middleware.AuthenticationMiddleware",
#     "django.contrib.messages.middleware.MessageMiddleware",
#     "django.middleware.clickjacking.XFrameOptionsMiddleware",
#      "ip_tracking.middleware.IPLoggingMiddleware",
#       "whitenoise.middleware.WhiteNoiseMiddleware",
# ]


# ROOT_URLCONF = 'alx_backend_security.urls'

# BASE_DIR = Path(__file__).resolve().parent.parent

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR / "templates"],  # üëà Add this line
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]
# WSGI_APPLICATION = 'alx_backend_security.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",  # Redis instance
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }

# # settings.py
# CELERY_BROKER_URL = "redis://localhost:6379/0"   # assuming Redis is running
# CELERY_BEAT_SCHEDULE = {
#     "detect-anomalies-hourly": {
#         "task": "ip_tracking.tasks.detect_anomalies",
#         "schedule": 3600.0,  # every 1 hour
#     },
# }



# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = 'static/'
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# # # STATICFILES_DIRS = [
# # #     os.path.join(BASE_DIR, "static"),
# # ]

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'







# ******************************************


# """
# Django settings for alx_backend_security project.
# """

# import os
# from pathlib import Path
# import sys

# # --------------------------------------------------
# # Paths
# # --------------------------------------------------
# BASE_DIR = Path(__file__).resolve().parent.parent

# # --------------------------------------------------
# # Security
# # --------------------------------------------------
# SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "dev-secret-key")
# DEBUG = os.getenv("DEBUG", "False").lower() in ["true", "1"]

# ALLOWED_HOSTS = [
#     "alx-backend-security-1.onrender.com",  # check your actual Render subdomain
#     "localhost",
#     "127.0.0.1",
# ]


# # --------------------------------------------------
# # Applications
# # --------------------------------------------------
# INSTALLED_APPS = [
#     "django.contrib.admin",
#     "django.contrib.auth",
#     "django.contrib.contenttypes",
#     "django.contrib.sessions",
#     "django.contrib.messages",
#     "django.contrib.staticfiles",

#     # Local apps
#     "ip_tracking",
#     "landing",

#     # Third-party apps
#     "django_ratelimit",
#     "rest_framework",
#     "drf_yasg",
# ]


# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "handlers": {
#         "console": {
#             "class": "logging.StreamHandler",
#             "stream": sys.stdout,
#         },
#     },
#     "root": {
#         "handlers": ["console"],
#         "level": "DEBUG",
#     },
# }


# MIDDLEWARE = [
#     "django.middleware.security.SecurityMiddleware",
#     "whitenoise.middleware.WhiteNoiseMiddleware",  # static files
#     "django.contrib.sessions.middleware.SessionMiddleware",
#     "django.middleware.common.CommonMiddleware",
#     "django.middleware.csrf.CsrfViewMiddleware",
#     "django.contrib.auth.middleware.AuthenticationMiddleware",
#     "django.contrib.messages.middleware.MessageMiddleware",
#     "django.middleware.clickjacking.XFrameOptionsMiddleware",
#     "ip_tracking.middleware.IPLoggingMiddleware",
# ]

# ROOT_URLCONF = "alx_backend_security.urls"

# # --------------------------------------------------
# # Templates
# # --------------------------------------------------
# TEMPLATES = [
#     {
#         "BACKEND": "django.template.backends.django.DjangoTemplates",
#         "DIRS": [BASE_DIR / "templates"],  # global templates folder
#         "APP_DIRS": True,
#         "OPTIONS": {
#             "context_processors": [
#                 "django.template.context_processors.debug",
#                 "django.template.context_processors.request",
#                 "django.contrib.auth.context_processors.auth",
#                 "django.contrib.messages.context_processors.messages",
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = "alx_backend_security.wsgi.application"

# # --------------------------------------------------
# # Database
# # --------------------------------------------------
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }
# # ‚ö°Ô∏è If you later switch to Postgres on Render:
# # DATABASES = {
# #     "default": dj_database_url.config(default=os.getenv("DATABASE_URL"))
# # }

# # --------------------------------------------------
# # Cache / Redis
# # --------------------------------------------------
# REDIS_URL = os.getenv("REDIS_URL", "redis://127.0.0.1:6379/1")

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": REDIS_URL,
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         },
#     }
# }

# # --------------------------------------------------
# # Celery
# # --------------------------------------------------
# CELERY_BROKER_URL = os.getenv("REDIS_URL", "redis://127.0.0.1:6379/0")
# CELERY_BEAT_SCHEDULE = {
#     "detect-anomalies-hourly": {
#         "task": "ip_tracking.tasks.detect_anomalies",
#         "schedule": 3600.0,  # every 1 hour
#     },
# }

# # --------------------------------------------------
# # Password Validation
# # --------------------------------------------------
# AUTH_PASSWORD_VALIDATORS = [
#     {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
#     {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
#     {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
#     {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
# ]

# # --------------------------------------------------
# # Internationalization
# # --------------------------------------------------
# LANGUAGE_CODE = "en-us"
# TIME_ZONE = "UTC"
# USE_I18N = True
# USE_TZ = True

# # --------------------------------------------------
# # Static Files
# # --------------------------------------------------
# STATIC_URL = "static/"
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# # --------------------------------------------------
# # Default PK
# # --------------------------------------------------
# DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


"""
Django settings for alx_backend_security project.
"""
import dj_database_url
import os
import sys
from pathlib import Path

# --------------------------------------------------
# Paths
# --------------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# --------------------------------------------------
# Security
# --------------------------------------------------
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "dev-secret-key")
DEBUG = os.getenv("DEBUG", "False").lower() in ["true", "1"]

ALLOWED_HOSTS = [
    "*",
    "alx_backend_security.onrender.com",
    "localhost",
    "127.0.0.1",
]

# --------------------------------------------------
# Applications
# --------------------------------------------------
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Local apps
    "ip_tracking",
    "landing",

    # Third-party apps
    "django_ratelimit",
    "rest_framework",
    "drf_yasg",
    "corsheaders",
    "django_extensions",
]

# --------------------------------------------------
# Logging
# --------------------------------------------------
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "stream": sys.stdout,
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "DEBUG",
    },
}

# --------------------------------------------------
# Middleware
# --------------------------------------------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # serve static files
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "ip_tracking.middleware.IPLoggingMiddleware",
    "corsheaders.middleware.CorsMiddleware"
]

ROOT_URLCONF = "alx_backend_security.urls"
CORS_ALLOW_ALL_ORIGINS = True

# --------------------------------------------------
# Templates
# --------------------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # global templates folder
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "alx_backend_security.wsgi.application"



# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": "alx_travel_app",
#         "USER": "alx_user",
#         "PASSWORD": "root",
#         "HOST": "localhost",
#         "PORT": "5432",
#     }
# }


DATABASES = {
    "default": dj_database_url.config(
        default=os.getenv(
            "DATABASE_URL",
            "postgresql://alx_user:root@localhost:5432/alx_travel_app"  # fallback for local dev
        )
    )
}




# ‚ö°Ô∏è If you later switch to Postgres on Render:
# import dj_database_url
# DATABASES = {
#     "default": dj_database_url.config(default=os.getenv("DATABASE_URL"))
# }

# --------------------------------------------------
# Cache / Redis
# --------------------------------------------------
# Default to local Redis if REDIS_URL is not set
# --------------------------------------------------
# Cache / Redis
# --------------------------------------------------
REDIS_URL = os.getenv(
    "REDIS_URL",
    "redis://:a96jGRbmsEJIPS9RkWtvWDAF00g6WHa0@redis-15734.c89.us-east-1-3.ec2.redns.redis-cloud.com:15734/0"
)

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

CELERY_BROKER_URL = REDIS_URL



# --------------------------------------------------
# Celery
# --------------------------------------------------
CELERY_BROKER_URL = REDIS_URL
CELERY_BEAT_SCHEDULE = {
    "detect-anomalies-hourly": {
        "task": "ip_tracking.tasks.detect_anomalies",
        "schedule": 3600.0,  # every 1 hour
    },
}

# --------------------------------------------------
# Password Validation
# --------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --------------------------------------------------
# Internationalization
# --------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# --------------------------------------------------
# Static Files
# --------------------------------------------------
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# --------------------------------------------------
# Default PK
# --------------------------------------------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
